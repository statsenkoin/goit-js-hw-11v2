{"mappings":"AAAA,MAGMA,EAAS,IAAIC,gBAAgB,CACjCC,IAJc,qCAKdC,WAAY,QACZC,YAAa,aACbC,YAAY,IAUCC,eAAAC,EAA4BC,EAAOC,EAAMC,GACtD,IACE,MAAMC,QAAiBC,MACrB,8BAAiBJ,UAAcC,cAAiBC,KAAWV,KAE7D,aAAaW,EAASE,M,CACtB,MAAOC,GACP,OAAOC,QAAQC,IAAI,aAAcF,E,ECxBrC,MAAMG,EAAYC,SAASC,cAAc,mBAE1B,SAAAC,EAAuBX,EAAMY,EAAOC,GACjD,IAAIC,EAAO,SAASd,KAAQY,oBAAwBC,IACpDL,EAAUO,YAAcD,C,CCJ1B,MAAME,EAAUP,SAASC,cAAc,eAMhC,SAASO,EAAcC,GAC5B,IAAIC,EAASD,EAAKE,QAChB,CACEC,GACAC,aAAEA,EAAYC,cAAEA,EAAaC,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,UAAEA,KAErDP,EAAO,4CACJE,qEAGAD,uBACAE,2EAOb,IAEFR,EAAQa,mBAAmB,YAAaV,E,CC1B1C,MAAMW,EAAkBrB,SAASC,cAAc,yBAIhC,SAAAqB,IACb,OAAOD,EAAgBE,K,CAHzBF,EAAgBG,iBAAiB,SAAUF,GCM3C,IAAIG,EAAO,EACPC,EAAQ,EACRC,EAAU,EACVC,EAAY,GAIDxC,eAAAyC,EAA4BC,GACrCF,IAAcE,IAChBF,EAAYE,EACZL,EAAO,EFfTlB,EAAQwB,UAAY,IEkBpBJ,EAAUL,IACV,IACEG,GAAQ,EACR,MAAMhB,QAAapB,EAAauC,EAAWH,EAAME,IAC3CK,KAAEA,EAAI5B,MAAEA,GAAUK,EACxBiB,EAAQO,KAAKC,KAAK9B,EAAQuB,GACtBD,EAAQ,GAAGS,IACfjC,EAAcuB,EAAMC,EAAOtB,GAC3BI,EAAcwB,E,CACd,MACAnC,QAAQC,IAAI,aAAcF,M,EC5B9B,MAMMwC,EAAqBpC,SAASC,cAAc,2BAC5CoC,EAAiBrC,SAASC,cAAc,uBAE9CmC,EAAmBZ,iBAAiB,SAAUW,GAC9C,MAAMG,EAAW,IAAIC,sBAQrB,SAAyBC,EAASC,GAChCD,EAAQE,SAAQtD,MAAMuD,IAChBA,EAAMC,gBAAkBhB,SAAiBC,EAAaD,GACtDF,GAASD,GAAMgB,EAASI,UAAUR,EAAe,G,GArBjC,CACtBS,KAAM,KACNC,WAAY,QACZC,UAAW,IASN,SAASb,IACdC,EAAmBa,QACfX,EAASY,QAAQb,GACjBC,EAASO,UAAUR,E,CCXNrC,SAASC,cAAc,gBAC/BuB,iBAAiB,UAU5BpC,eAA4B+D,GAC1BA,EAAMC,iBAIN,MAAMC,EAAYF,EAAMG,cAAcC,SAASC,YAAYjC,MAAMkC,aAS3D5B,EAAawB,E","sources":["src/js/fetch-pixabay.js","src/js/update-img-info.js","src/js/markup-gallery.js","src/js/set-search-options.js","src/js/create-markup.js","src/js/intersection-observer.js","src/index.js"],"sourcesContent":["const API_KEY = '32468715-2ee7d1cef437ed65ce73ff92a';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nconst params = new URLSearchParams({\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: true,\n});\n\n/**\n *\n * @param {String} query - userInput\n * @param {Number} page - requested page\n * @param {Number} perPage - number of requested objects\n * @returns array of objects or error message\n */\nexport default async function fetchPixabay(query, page, perPage) {\n  try {\n    const responce = await fetch(\n      `${BASE_URL}?q=${query}&page=${page}&per_page=${perPage}&${params}`\n    );\n    return await responce.json();\n  } catch (error) {\n    return console.log('error :>> ', error);\n  }\n}\n\n// export default function fetchPixabay(query, page, perPage) {\n//   return fetch(\n//     `${BASE_URL}?q=${query}&page=${page}&per_page=${perPage}&${params}`\n//   )\n//     .then(responce => {\n//       if (!responce.ok) {\n//         throw new Error(responce.status);\n//       }\n//       return responce.json();\n//     })\n//     .catch(error => console.log('error :>> ', error));\n// }\n","const imageInfo = document.querySelector('.js-images-info');\n\nexport default function updateImgInfo(page, pages, total) {\n  let info = `Page: ${page}/${pages}. Total images: ${total}`;\n  imageInfo.textContent = info;\n}\n","const gallery = document.querySelector('.js-gallery');\n\nexport function cleanMarkup() {\n  gallery.innerHTML = '';\n}\n\nexport function markupGallery(data) {\n  let markup = data.reduce(\n    (\n      acc,\n      { webformatURL, largeImageURL, tags, likes, views, comments, downloads }\n    ) => {\n      return (acc += `<div class=\"photo-card\">\n      <a href=\"${largeImageURL}\">\n        <img \n          class=\"card-image\" \n          src=\"${webformatURL}\" \n          alt=\"${tags}\" \n          loading=\"lazy\"\n        />\n      </a>\n    </div>\n    `);\n    },\n    ``\n  );\n  gallery.insertAdjacentHTML('beforeend', markup);\n}\n","const perPageSelector = document.querySelector('.js-per-page-selector');\n\nperPageSelector.addEventListener('change', getImagePerPage);\n\nexport default function getImagePerPage() {\n  return perPageSelector.value;\n}\n","import fetchPixabay from './fetch-pixabay';\nimport updateImgInfo from './update-img-info';\nimport { markupGallery } from './markup-gallery';\n\nimport { cleanMarkup } from './markup-gallery';\nimport getImagePerPage from './set-search-options';\nimport { setInfinityLoad } from './intersection-observer';\n\nlet page = 0;\nlet pages = 0;\nlet perPage = 0;\nlet userInput = '';\n\nexport { page, pages, userInput };\n\nexport default async function createMarkup(input) {\n  if (userInput !== input) {\n    userInput = input;\n    page = 0;\n    cleanMarkup();\n  }\n  perPage = getImagePerPage();\n  try {\n    page += 1;\n    const data = await fetchPixabay(userInput, page, perPage);\n    const { hits, total } = data;\n    pages = Math.ceil(total / perPage);\n    if (pages > 1) setInfinityLoad();\n    updateImgInfo(page, pages, total);\n    markupGallery(hits);\n  } catch {\n    console.log('error :>> ', error);\n  }\n}\n","import createMarkup from './create-markup';\nimport { page, pages, userInput } from './create-markup';\n\nconst observerOptions = {\n  root: null,\n  rootMargin: '500px',\n  threshold: 1.0,\n};\n\nconst paginationCheckbox = document.querySelector('.js-checkbox-pagination');\nconst observerTarget = document.querySelector('.js-observer-target');\n\npaginationCheckbox.addEventListener('change', setInfinityLoad);\nconst observer = new IntersectionObserver(handleIntersect, observerOptions);\n\nexport function setInfinityLoad() {\n  paginationCheckbox.checked\n    ? observer.observe(observerTarget)\n    : observer.unobserve(observerTarget);\n}\n\nfunction handleIntersect(entries, observer) {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting && userInput) await createMarkup(userInput);\n    if (pages <= page) observer.unobserve(observerTarget);\n  });\n}\n","import './js/intersection-observer';\n// import { setInfinityLoad } from './js/intersection-observer';\n\n// import getImagePerPage from './js/set-search-options';\nimport createMarkup from './js/create-markup';\nimport { cleanMarkup } from './js/markup-gallery';\n\nconst searchForm = document.querySelector('#search-form');\nsearchForm.addEventListener('submit', onFormSubmit);\n\n// let userInput = '';\n// let page = 1;\n// let pages = 1;\n// let perPage = 24;\n\n// export { userInput, page, pages, perPage };\n// export { userInput };\n\nasync function onFormSubmit(event) {\n  event.preventDefault();\n  // perPage = getImagePerPage();\n  // isInfinityLoad = setInfinityLoad();\n\n  const userInput = event.currentTarget.elements.searchQuery.value.trim();\n  // const newUserInput = event.currentTarget.elements.searchQuery.value.trim();\n  // if (userInput !== newUserInput) {\n  //   userInput = newUserInput;\n  //   // pages = 1;\n  //   // page = 1;\n  //   cleanMarkup();\n  // }\n\n  await createMarkup(userInput);\n  // page += 1;\n}\n"],"names":["$dbc96ee058a4a6d7$var$params","URLSearchParams","key","image_type","orientation","safesearch","async","$dbc96ee058a4a6d7$export$2e2bcd8739ae039","query","page","perPage","responce","fetch","json","error","console","log","$b73d1dc69cf83bdc$var$imageInfo","document","querySelector","$b73d1dc69cf83bdc$export$2e2bcd8739ae039","pages","total","info","textContent","$29ccc077861b16e9$var$gallery","$29ccc077861b16e9$export$200323f3545a08bc","data","markup","reduce","acc","webformatURL","largeImageURL","tags","likes","views","comments","downloads","insertAdjacentHTML","$1b23d5a488958f95$var$perPageSelector","$1b23d5a488958f95$export$2e2bcd8739ae039","value","addEventListener","$e91f9a2c1ec35283$export$523fb3936f49e028","$e91f9a2c1ec35283$export$da3bc2f57520e3c3","$e91f9a2c1ec35283$var$perPage","$e91f9a2c1ec35283$export$183a3d97cfc363fb","$e91f9a2c1ec35283$export$2e2bcd8739ae039","input","innerHTML","hits","Math","ceil","$2de6fd0ac2d5c0f8$export$aed5bc12bbf0d9fa","$2de6fd0ac2d5c0f8$var$paginationCheckbox","$2de6fd0ac2d5c0f8$var$observerTarget","$2de6fd0ac2d5c0f8$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","unobserve","root","rootMargin","threshold","checked","observe","event","preventDefault","userInput","currentTarget","elements","searchQuery","trim"],"version":3,"file":"index.30b745c2.js.map"}